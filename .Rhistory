# Type Coercion -----------------------------------------------------------
#convert string age to a number
ageAsNumeric <- as.numeric("54")
ageAsStr <- as.character(34)
# Control Flow ------------------------------------------------------------
#if, else
# For Loops ---------------------------------------------------------------
#for, while
# In-built Functions ------------------------------------------------------
# User Defined Function ---------------------------------------------------
absDouble <- function(a){
abs(2*a)
}
y <- absDouble(10)
y
# Externally-defined function ---------------------------------------------
# Load CSV file -----------"------------------------------------------------
dataCA1Control <- read.csv("GROUP_3_2023_GCA_RESULTS_CONTROL.csv")
# Import and view data
dataCA1Control <- read.csv("GROUP_3_2023_GCA_RESULTS_CONTROL.csv")
summary(dataCA1Control)
# Remove negative values --------------------------------------------------
pretrial_GAD <- c(dataCA1Control$pretrial_GAD)
pretrial_GAD
Pos_pretrial_GAD <- pretrial_GAD[pretrial_GAD >= 0]
Pos_pretrial_GAD
# Histogram of positive values
hist(Pos_pretrial_GAD)
# Check data is numeric
is.numeric(dataCA1Control$pretrial_GAD)
install.packages("dplyr")
library(dplyr)
dataCA1Control %>%
select(gender)%>%
mutate(is_female = grepl('Female', gender) & mutate(is_female = grepl('F', gender)))
install.packages("dplyr")
library(dplyr)
dataCA1Control <- read.csv("GROUP_3_2023_GCA_RESULTS_CONTROL.csv")
dataCA1Control %>%
select(gender)%>%
mutate(is_female = grepl('Female', gender) & mutate(is_female = grepl('F', gender)))
install.packages("dplyr")
install.packages("dplyr")
library(dplyr)
dataCA1Control <- read.csv("GROUP_3_2023_GCA_RESULTS_CONTROL.csv")
dataCA1Control %>%
select(gender)%>%
mutate is_female = grepl('Female', gender)
source("~/AMY/COURSE/4 Thu 6pm Data Analytics for Computer Graphics/CA1/DataAnalyticsCA1/DataAnalyticsCA1/CA1Notebook-v4.Rmd")
install.packages("dplyr")
library(dplyr)
dataCA1Control <- read.csv("GROUP_3_2023_GCA_RESULTS_CONTROL.csv")
dataCA1Control %>%
select(gender)%>%
mutate is_female = grepl('Female', gender)
install.packages("dplyr")
library(dplyr)
dataCA1Control <- read.csv("GROUP_3_2023_GCA_RESULTS_CONTROL.csv")
dataCA1Control %>%
select(gender) %>%
mutate isfemale = grepl('Female', gender)
install.packages("dplyr")
install.packages("dplyr")
library(dplyr)
dataCA1Control <- read.csv("GROUP_3_2023_GCA_RESULTS_CONTROL.csv")
dataCA1Control %>%
select(Gender) %>%
mutate isfemale = grepl('Female', Gender)
install.packages("dplyr")
library(dplyr)
dataCA1Control <- read.csv("GROUP_3_2023_GCA_RESULTS_CONTROL.csv")
dataCA1Control %>%
select(Gender) %>%
mutate (isfemale = grepl('Female', Gender))
install.packages("dplyr")
install.packages("dplyr")
library(dplyr)
dataCA1Control <- read.csv("GROUP_3_2023_GCA_RESULTS_CONTROL.csv")
dataCA1Control %>%
select(gender) %>%
mutate (isfemale = grepl('Female', gender))
install.packages("dplyr")
library(dplyr)
dataCA1Control <- read.csv("GROUP_3_2023_GCA_RESULTS_CONTROL.csv")
dataCA1Control %>%
select(gender) %>%
mutate (isfemale = grepl('female', gender))
install.packages("dplyr")
install.packages("dplyr")
library(dplyr)
dataCA1Control <- read.csv("GROUP_3_2023_GCA_RESULTS_CONTROL.csv")
dataCA1Control %>%
select(gender) %>%
mutate (isfemale = grepl('F', gender)) %<%
install.packages("dplyr")
install.packages("dplyr")
library(dplyr)
dataCA1Control <- read.csv("GROUP_3_2023_GCA_RESULTS_CONTROL.csv")
dataCA1Control %>%
select(gender) %>%
mutate (isfemale = grepl('F', gender))
install.packages("dplyr")
library(dplyr)
dataCA1Control <- read.csv("GROUP_3_2023_GCA_RESULTS_CONTROL.csv")
dataCA1Control %>%
select(gender) %>%
filter(gender == 'female', gender == 'F')
install.packages("dplyr")
install.packages("dplyr")
library(dplyr)
dataCA1Control <- read.csv("GROUP_3_2023_GCA_RESULTS_CONTROL.csv")
dataCA1Control %>%
select(gender) %>%
filter(gender == 'female'| gender == 'F')
install.packages("dplyr")
library(dplyr)
dataCA1Control <- read.csv("GROUP_3_2023_GCA_RESULTS_CONTROL.csv")
dataCA1Control %>%
select(gender) %>%
filter (allfemales = gender == 'female'| gender == 'F')
install.packages("dplyr")
install.packages("dplyr")
library(dplyr)
dataCA1Control <- read.csv("GROUP_3_2023_GCA_RESULTS_CONTROL.csv")
dataCA1Control %>%
select(gender) %>%
allfemales = filter (gender == 'female'| gender == 'F')
install.packages("dplyr")
library(dplyr)
dataCA1Control <- read.csv("GROUP_3_2023_GCA_RESULTS_CONTROL.csv")
dataCA1Control %>%
select(gender) %>%
allfemales = filter(gender == 'female'| gender == 'F')
install.packages("dplyr")
library(dplyr)
dataCA1Control <- read.csv("GROUP_3_2023_GCA_RESULTS_CONTROL.csv")
dataCA1Control %>%
select(gender) %>%
filter(gender == 'female'| gender == 'F')
install.packages("dplyr")
install.packages("dplyr")
library(dplyr)
dataCA1Control <- read.csv("GROUP_3_2023_GCA_RESULTS_CONTROL.csv")
dataCA1Control %>%
select(gender) %>%
mutate(F = female)
install.packages("dplyr")
library(dplyr)
dataCA1Control <- read.csv("GROUP_3_2023_GCA_RESULTS_CONTROL.csv")
dataCA1Control %>%
select(gender) %>%
mutate('F' = 'female')
install.packages("dplyr")
install.packages("dplyr")
library(dplyr)
dataCA1Control <- read.csv("GROUP_3_2023_GCA_RESULTS_CONTROL.csv")
dataCA1Control %>%
select(gender) %>%
filter(gender == female | gender == F)
install.packages("dplyr")
library(dplyr)
dataCA1Control <- read.csv("GROUP_3_2023_GCA_RESULTS_CONTROL.csv")
dataCA1Control %>%
select(gender) %>%
filter(gender == 'female' | gender == 'F')
install.packages("dplyr")
install.packages("dplyr")
library(dplyr)
dataCA1Control <- read.csv("GROUP_3_2023_GCA_RESULTS_CONTROL.csv")
dataCA1Control %>%
select(gender) %>%
filter(gender == 'female' | gender == 'F') %>%
mutate(allfemales = "female" & "F", gender)
install.packages("dplyr")
library(dplyr)
dataCA1Control <- read.csv("GROUP_3_2023_GCA_RESULTS_CONTROL.csv")
dataCA1Control %>%
select(gender) %>%
filter(gender == 'female' | gender == 'F') %>%
mutate(allfemales = filter(gender == 'female' | gender == 'F'))
install.packages("dplyr")
install.packages("dplyr")
library(dplyr)
dataCA1Control <- read.csv("GROUP_3_2023_GCA_RESULTS_CONTROL.csv")
dataCA1Control %>%
select(gender) %>%
filter(gender == 'female' | gender == 'F')
View(dataCA1Control)
dataCA1Control <- read.csv("GROUP_3_2023_GCA_RESULTS_CONTROL.csv")
cleanedGender = recode(dataCA1Control$gender, "male"=1, "female"=2, "F"=2)
cleanedGender
dataCA1Control <- read.csv("GROUP_3_2023_GCA_RESULTS_CONTROL.csv")
cleanedGender = recode(dataCA1Control$gender, "male"=1, "female"=2, "F"=2)
cleanedGender
hist(cleanedGender)
dataCA1Control <- read.csv("GROUP_3_2023_GCA_RESULTS_CONTROL.csv")
cleanedGender = recode(dataCA1Control$gender, "male"=1, "female"=2, "F"=2)
cleanedGender
hist(cleanedGender = 2, pretrial_GAD)
dataCA1Control <- read.csv("GROUP_3_2023_GCA_RESULTS_CONTROL.csv")
cleanedGender = recode(dataCA1Control$gender, "male"=1, "female"=2, "F"=2)
cleanedGender
hist(cleanedGender = 2 & pretrial_GAD)
dataCA1Control <- read.csv("GROUP_3_2023_GCA_RESULTS_CONTROL.csv")
cleanedGender = recode(dataCA1Control$gender, "male"=1, "female"=2, "F"=2)
cleanedGender
allFemales = (cleanedGender = 2)
dataCA1Control <- read.csv("GROUP_3_2023_GCA_RESULTS_CONTROL.csv")
cleanedGender = recode(dataCA1Control$gender, "male"=1, "female"=2, "F"=2)
cleanedGender
allFemales = (cleanedGender = "2")
dataCA1Control <- read.csv("GROUP_3_2023_GCA_RESULTS_CONTROL.csv")
cleanedGender = recode(dataCA1Control$gender, "male"=1, "female"=2, "F"=2)
cleanedGender
allFemales = cleanedGender(cleanedGender = "2")
dataCA1Control <- read.csv("GROUP_3_2023_GCA_RESULTS_CONTROL.csv")
cleanedGender = recode(dataCA1Control$gender, "male"=1, "female"=2, "F"=2)
cleanedGender
allFemales = filter(cleanedGender = "2")
dataCA1Control <- read.csv("GROUP_3_2023_GCA_RESULTS_CONTROL.csv")
cleanedGender = recode(dataCA1Control$gender, "male"=1, "female"=2, "F"=2)
cleanedGender
allFemales = filter(cleanedGender = 2)
dataCA1Control <- read.csv("GROUP_3_2023_GCA_RESULTS_CONTROL.csv")
cleanedGender = recode(dataCA1Control$gender, "male"=1, "female"=2, "F"=2)
cleanedGender
allFemales = filter(cleanedGender = '2')
dataCA1Control <- read.csv("GROUP_3_2023_GCA_RESULTS_CONTROL.csv")
cleanedGender = recode(dataCA1Control$gender, "male"=1, "female"=2, "F"=2)
cleanedGender
filter(str_detect(cleanedGender, "2") == TRUE)
dataCA1Control <- read.csv("GROUP_3_2023_GCA_RESULTS_CONTROL.csv")
cleanedGender = recode(dataCA1Control$gender, "male"=1, "female"=2, "F"=2)
cleanedGender
filter(c(cleanedGender, "2") == TRUE)
install.packages("stringr")
library(stringr)
dataCA1Control <- read.csv("GROUP_3_2023_GCA_RESULTS_CONTROL.csv")
cleanedGender = recode(dataCA1Control$gender, "male"=1, "female"=2, "F"=2)
cleanedGender
filter(str_detect(cleanedGender, "2"))
install.packages("stringr")
install.packages("stringr")
library(stringr)
dataCA1Control <- read.csv("GROUP_3_2023_GCA_RESULTS_CONTROL.csv")
cleanedGender = recode(dataCA1Control$gender, "male"=1, "female"=2, "F"=2)
install.packages("stringr")
library(stringr)
dataCA1Control <- read.csv("GROUP_3_2023_GCA_RESULTS_CONTROL.csv")
cleanedGender = as.numeric(dataCA1Control$gender, "male"=1, "female"=2, "F"=2)
cleanedGender
install.packages("stringr")
install.packages("stringr")
library(stringr)
dataCA1Control <- read.csv("GROUP_3_2023_GCA_RESULTS_CONTROL.csv")
cleanedGender = as.numeric(dataCA1Control$gender)
cleanedGender
dataCA1Control <- read.csv("GROUP_3_2023_GCA_RESULTS_CONTROL.csv")
cleanedGender = as.numeric(dataCA1Control$gender)
cleanedGender
dataCA1Control <- read.csv("GROUP_3_2023_GCA_RESULTS_CONTROL.csv")
cleanedGender <- as.character(gender(male, female, F))
dataCA1Control <- read.csv("GROUP_3_2023_GCA_RESULTS_CONTROL.csv")
cleanedGender <- as.character(c(male, female, F))
dataCA1Control <- read.csv("GROUP_3_2023_GCA_RESULTS_CONTROL.csv")
cleanedGender <- as.character(c("male", "female", "F"))
cleanedGender
dataCA1Control <- read.csv("GROUP_3_2023_GCA_RESULTS_CONTROL.csv")
vec <- as.character(c("male", "female", "F"))
vec
class(vec)
dataCA1Control <- read.csv("GROUP_3_2023_GCA_RESULTS_CONTROL.csv")
gender <- c(female = 0, "F" = 0, male = 1)
dataCA1Control <- read.csv("GROUP_3_2023_GCA_RESULTS_CONTROL.csv")
genderNos <- c(female = 0, "F" = 0, male = 1)
numGender <- genderNos[dataCA1Control$gender]
dataCA1Control <- read.csv("GROUP_3_2023_GCA_RESULTS_CONTROL.csv")
genderNos <- c(female = 0, "F" = 0, male = 1)
numGender <- genderNos[dataCA1Control$gender]
count <- c(numGender = 0)
dataCA1Control <- read.csv("GROUP_3_2023_GCA_RESULTS_CONTROL.csv")
genderNos <- c(female = 0, "F" = 0, male = 1)
numGender <- genderNos[dataCA1Control$gender]
count(numGender = 0)
library(dplyr)
dataCA1Control <- read.csv("GROUP_3_2023_GCA_RESULTS_CONTROL.csv")
genderNos <- c(female = 0, "F" = 0, male = 1)
numGender <- genderNos[dataCA1Control$gender]
count(numGender = 0)
library(dplyr)
dataCA1Control <- read.csv("GROUP_3_2023_GCA_RESULTS_CONTROL.csv")
genderNos <- c(female = 0, "F" = 0, male = 1)
numGender <- genderNos[dataCA1Control$gender]
i <- c(gender)
library(dplyr)
dataCA1Control <- read.csv("GROUP_3_2023_GCA_RESULTS_CONTROL.csv")
genderNos <- c(female = 0, "F" = 0, male = 1)
numGender <- genderNos[dataCA1Control$gender]
i <- c(gender)
dataCA1Control[ , i] <- apply(dataCA1Control[ , i], gender,
function(x) as.numeric(as.character(x)))
source("~/AMY/COURSE/4 Thu 6pm Data Analytics for Computer Graphics/CA1/DataAnalyticsCA1/DataAnalyticsCA1/CA1Notebook-v4.Rmd")
# Converting gender to numeric
dataCA1Control <- read.csv("GROUP_3_2023_GCA_RESULTS_CONTROL.csv")
dataCA1Control$gender <- replace(dataCA1Control$gender, dataCA1Control$gender == "F","female")
dataCA1Control$gender[dataCA1Control$gender=='female'] <- 1
dataCA1Control$gender[dataCA1Control$gender=='male'] <- 2
dataCA1Control$gender <- as.numeric(dataCA1Control$gender)
dataCA1Control$gender
plot(gender,CtrPos_pretrial_GAD)
# Converting gender to numeric
dataCA1Control <- read.csv("GROUP_3_2023_GCA_RESULTS_CONTROL.csv")
dataCA1Control$gender <- replace(dataCA1Control$gender, dataCA1Control$gender == "F","female")
dataCA1Control$gender[dataCA1Control$gender=='female'] <- 1
dataCA1Control$gender[dataCA1Control$gender=='male'] <- 2
dataCA1Control$gender <- as.numeric(dataCA1Control$gender)
dataCA1Control$gender
plot(gender,pretrial_GAD)
# Converting gender to numeric
dataCA1Control <- read.csv("GROUP_3_2023_GCA_RESULTS_CONTROL.csv")
dataCA1Control$gender <- replace(dataCA1Control$gender, dataCA1Control$gender == "F","female")
dataCA1Control$gender[dataCA1Control$gender=='female'] <- 1
dataCA1Control$gender[dataCA1Control$gender=='male'] <- 2
dataCA1Control$gender <- as.numeric(dataCA1Control$gender)
dataCA1Control$gender
plot(gender,dataCA1Control$pretrial_GAD)
# Converting gender to numeric
dataCA1Control <- read.csv("GROUP_3_2023_GCA_RESULTS_CONTROL.csv")
dataCA1Control$gender <- replace(dataCA1Control$gender, dataCA1Control$gender == "F","female")
dataCA1Control$gender[dataCA1Control$gender=='female'] <- 1
dataCA1Control$gender[dataCA1Control$gender=='male'] <- 2
dataCA1Control$gender <- as.numeric(dataCA1Control$gender)
dataCA1Control$gender
load("~/AMY/COURSE/4 Thu 6pm Data Analytics for Computer Graphics/CA1/DataAnalyticsCA1/DataAnalyticsCA1/.RData")
setwd("~/AMY/COURSE/4 Thu 6pm Data Analytics for Computer Graphics/CA1/DataAnalyticsCA1/2023_DAIE_GCA_AD_LH")
setwd("~/AMY/COURSE/4 Thu 6pm Data Analytics for Computer Graphics/CA1/DataAnalyticsCA1/2023_DAIE_GCA_AD_LH")
# Show all values and check if numeric
pretrial_GAD <- c(GROUP_3_2023_GCA_RESULTS_CONTROL.csv$pretrial_GAD)
# Show all values and check if numeric
pretrial_GAD <- c("GROUP_3_2023_GCA_RESULTS_CONTROL.csv$pretrial_GAD")
pretrial_GAD
is.numeric(GROUP_3_2023_GCA_RESULTS_CONTROL.csv$pretrial_GAD)
GROUP_3_2023_GCA_RESULTS_CONTROL.csv <- read.csv("~/AMY/COURSE/4 Thu 6pm Data Analytics for Computer Graphics/CA1/DataAnalyticsCA1/2023_DAIE_GCA_AD_LH/GROUP_3_2023_GCA_RESULTS_CONTROL.csv.csv")
View(GROUP_3_2023_GCA_RESULTS_CONTROL.csv)
GROUP_3_2023_GCA_RESULTS_EXPERIMENTAL <- read.csv("~/AMY/COURSE/4 Thu 6pm Data Analytics for Computer Graphics/CA1/DataAnalyticsCA1/2023_DAIE_GCA_AD_LH/GROUP_3_2023_GCA_RESULTS_EXPERIMENTAL.csv")
View(GROUP_3_2023_GCA_RESULTS_EXPERIMENTAL)
# Show all values and check if numeric
pretrial_GAD <- c(GROUP_3_2023_GCA_RESULTS_CONTROL$pretrial_GAD)
# Show all values and check if numeric
pretrial_GAD <- c(GROUP_3_2023_GCA_RESULTS_CONTROL.csv$pretrial_GAD)
pretrial_GAD
is.numeric(GROUP_3_2023_GCA_RESULTS_CONTROL.csv$pretrial_GAD)
setwd("~/AMY/COURSE/4 Thu 6pm Data Analytics for Computer Graphics/CA1/DataAnalyticsCA1/2023_DAIE_GCA_AD_LH")
setwd("~/AMY/COURSE/4 Thu 6pm Data Analytics for Computer Graphics/CA1/DataAnalyticsCA1/2023_DAIE_GCA_AD_LH")
# Show all values and check if numeric
pretrial_GAD <- c(GROUP_3_2023_GCA_RESULTS_CONTROL.csv$pretrial_GAD)
pretrial_GAD
is.numeric(GROUP_3_2023_GCA_RESULTS_CONTROL.csv$pretrial_GAD)
# Show all values and check if numeric
pretrial_GAD <- c(GROUP_3_2023_GCA_RESULTS_CONTROL.csv$pretrial_GAD)
pretrial_GAD
is.numeric(GROUP_3_2023_GCA_RESULTS_CONTROL.csv$pretrial_GAD)
# Boxplot showing outlier in control pre-trial GAD scores
boxplot(GROUP_3_2023_GCA_RESULTS_CONTROL$pretrial_GAD)
# Show all values and check if numeric
pretrial_GAD <- c(GROUP_3_2023_GCA_RESULTS_CONTROL.csv$pretrial_GAD)
pretrial_GAD
is.numeric(GROUP_3_2023_GCA_RESULTS_CONTROL.csv$pretrial_GAD)
# Boxplot showing outlier in control pre-trial GAD scores
boxplot(GROUP_3_2023_GCA_RESULTS_CONTROL.csv$pretrial_GAD)
# Get positive values
CtrPos_pretrial_GAD <- pretrial_GAD[pretrial_GAD >= 0]
CtrPos_pretrial_GAD
# Histogram of positive pretrial GAD values
pretrial_GAD <- c(GROUP_3_2023_GCA_RESULTS_CONTROL.csv$pretrial_GAD)
pretrial_GAD
CtrPos_pretrial_GAD <- pretrial_GAD[pretrial_GAD >= 0]
CtrPos_pretrial_GAD
hist(CtrPos_pretrial_GAD,
main = "Control positive pre-trial GAD scores",
xlab = "Positive pre-trial GAD scores")
# Anderson Darling test for normality - Positive pretrial GAD values for control data
#install and load nortest library
install.packages('nortest')
library(nortest)
ad.test(CtrPos_pretrial_GAD)
# Check if control post-trial data is numeric
dataCA1Control <- read.csv("GROUP_3_2023_GCA_RESULTS_CONTROL.csv")
View(GROUP_3_2023_GCA_RESULTS_CONTROL.csv)
# Check if control post-trial data is numeric
Ctrposttrial_GAD <- c(GROUP_3_2023_GCA_RESULTS_CONTROL.csv$posttrial_GAD)
is.numeric(Ctrposttrial_GAD)
# Show all values and check if numeric
pretrial_GAD <- c(GROUP_3_2023_GCA_RESULTS_CONTROL.csv$pretrial_GAD)
pretrial_GAD
is.numeric(GROUP_3_2023_GCA_RESULTS_CONTROL.csv$pretrial_GAD)
# Boxplot showing outlier in control pre-trial GAD scores
boxplot(GROUP_3_2023_GCA_RESULTS_CONTROL.csv$pretrial_GAD)
# Get positive values
CtrPos_pretrial_GAD <- pretrial_GAD[pretrial_GAD >= 0]
CtrPos_pretrial_GAD
# Histogram of positive pretrial GAD values
pretrial_GAD <- c(GROUP_3_2023_GCA_RESULTS_CONTROL.csv$pretrial_GAD)
pretrial_GAD
CtrPos_pretrial_GAD <- pretrial_GAD[pretrial_GAD >= 0]
CtrPos_pretrial_GAD
hist(CtrPos_pretrial_GAD,
main = "Control positive pre-trial GAD scores",
xlab = "Positive pre-trial GAD scores")
# Anderson Darling test for normality - Positive pretrial GAD values for control data
#install and load nortest library
install.packages('nortest')
library(nortest)
ad.test(CtrPos_pretrial_GAD)
# Check if control post-trial data is numeric
Ctrposttrial_GAD <- c(GROUP_3_2023_GCA_RESULTS_CONTROL.csv$posttrial_GAD)
is.numeric(Ctrposttrial_GAD)
# Anderson Darling test for normality - Post-trial GAD values for control data
#load nortest library
library(nortest)
ad.test(Ctrposttrial_GAD)
# Check if experiment pre-trial data is numeric
dataCA1Experiment <- read.csv("GROUP_3_2023_GCA_RESULTS_EXPERIMENTAL.csv")
Exppretrial_GAD <- c(dataCA1Experiment$pretrial_GAD)
is.numeric(Exppretrial_GAD)
# Anderson Darling test for normality - Pre-trial GAD values for experiment data
#load nortest library
library(nortest)
ad.test(Exppretrial_GAD)
# Check experiment post-trial data is numeric
dataCA1Experiment <- read.csv("GROUP_3_2023_GCA_RESULTS_EXPERIMENTAL.csv")
Expposttrial_GAD <- c(dataCA1Experiment$posttrial_GAD)
is.numeric(Expposttrial_GAD)
# Boxplot of experiment post-trial data showing outlier
boxplot(Expposttrial_GAD)
# Get positive experiment post-trial values
ExpPos_posttrial_GAD <- Expposttrial_GAD[Expposttrial_GAD >= 0]
ExpPos_posttrial_GAD
is.numeric(ExpPos_posttrial_GAD)
# Histogram of postive experiment post trial values
hist(ExpPos_posttrial_GAD,
main = "Experiment positive post-trial GAD scores",
xlab = "Positive post-trial GAD scores")
# Anderson Darling test for normality - Positive Post-trial GAD values for experiment data
#load nortest library
library(nortest)
ad.test(ExpPos_posttrial_GAD)
# Summary of Experiment data
dataCA1Experiment <- read.csv("GROUP_3_2023_GCA_RESULTS_EXPERIMENTAL.csv")
summary(dataCA1Experiment)
install.packages("nortest")
# Show all values and check if numeric
pretrial_GAD <- c(GROUP_3_2023_GCA_RESULTS_CONTROL.csv$pretrial_GAD)
pretrial_GAD
is.numeric(GROUP_3_2023_GCA_RESULTS_CONTROL.csv$pretrial_GAD)
# Boxplot showing outlier in control pre-trial GAD scores
boxplot(GROUP_3_2023_GCA_RESULTS_CONTROL.csv$pretrial_GAD)
# Get positive values
CtrPos_pretrial_GAD <- pretrial_GAD[pretrial_GAD >= 0]
CtrPos_pretrial_GAD
# Histogram of positive pretrial GAD values
pretrial_GAD <- c(GROUP_3_2023_GCA_RESULTS_CONTROL.csv$pretrial_GAD)
pretrial_GAD
CtrPos_pretrial_GAD <- pretrial_GAD[pretrial_GAD >= 0]
CtrPos_pretrial_GAD
hist(CtrPos_pretrial_GAD,
main = "Control positive pre-trial GAD scores",
xlab = "Positive pre-trial GAD scores")
# Anderson Darling test for normality - Positive pretrial GAD values for control data
#install and load nortest library
install.packages('nortest')
library(nortest)
ad.test(CtrPos_pretrial_GAD)
# Check if control post-trial data is numeric
Ctrposttrial_GAD <- c(GROUP_3_2023_GCA_RESULTS_CONTROL.csv$posttrial_GAD)
is.numeric(Ctrposttrial_GAD)
# Anderson Darling test for normality - Post-trial GAD values for control data
#load nortest library
library(nortest)
ad.test(Ctrposttrial_GAD)
# Check if experiment pre-trial data is numeric
dataCA1Experiment <- read.csv("GROUP_3_2023_GCA_RESULTS_EXPERIMENTAL.csv")
Exppretrial_GAD <- c(dataCA1Experiment$pretrial_GAD)
is.numeric(Exppretrial_GAD)
# Anderson Darling test for normality - Pre-trial GAD values for experiment data
#load nortest library
library(nortest)
ad.test(Exppretrial_GAD)
# Check experiment post-trial data is numeric
dataCA1Experiment <- read.csv("GROUP_3_2023_GCA_RESULTS_EXPERIMENTAL.csv")
Expposttrial_GAD <- c(dataCA1Experiment$posttrial_GAD)
is.numeric(Expposttrial_GAD)
# Boxplot of experiment post-trial data showing outlier
boxplot(Expposttrial_GAD)
# Get positive experiment post-trial values
ExpPos_posttrial_GAD <- Expposttrial_GAD[Expposttrial_GAD >= 0]
ExpPos_posttrial_GAD
is.numeric(ExpPos_posttrial_GAD)
# Histogram of postive experiment post trial values
hist(ExpPos_posttrial_GAD,
main = "Experiment positive post-trial GAD scores",
xlab = "Positive post-trial GAD scores")
# Anderson Darling test for normality - Positive Post-trial GAD values for experiment data
#load nortest library
library(nortest)
ad.test(ExpPos_posttrial_GAD)
# Summary of Experiment data
dataCA1Experiment <- read.csv("GROUP_3_2023_GCA_RESULTS_EXPERIMENTAL.csv")
summary(dataCA1Experiment)
# Check if pre-trial values numeric
is.numeric(GROUP_3_2023_GCA_RESULTS_CONTROL.csv$pretrial_GAD)
setwd("~/AMY/COURSE/4 Thu 6pm Data Analytics for Computer Graphics/CA1/DataAnalyticsCA1/2023_DAIE_GCA_AD_LH")
